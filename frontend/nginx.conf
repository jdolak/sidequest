server {
    listen 80;
    server_name localhost;

    resolver 127.0.0.11;

    set $cors "https://sidequest.jdolak.com";

    if ($http_origin ~* ^https?://localhost(:\d+)?$) {
        set $cors $http_origin;
    }

    
    # Serve React static files
    root /usr/share/nginx/html;
    index index.html;
    location / {
        try_files $uri /index.html;
    }

    # Reverse proxy API requests to Flask
    location /api/ {

        proxy_pass http://sidequest-sq-flask-1:5000/;

        add_header 'Access-Control-Allow-Origin' "$cors" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;


        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        error_page 502 = @fallback;
    }

    location /auth/ {

        proxy_pass http://sidequest-sq-flask-1:5000/;
        
        add_header 'Access-Control-Allow-Origin' "$cors" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;


        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 1s;
        proxy_read_timeout 2s;

        error_page 502 = @fallback;

    }

    location /uploads/ {

        proxy_pass http://sidequest-sq-s3-1:9000;

        add_header 'Access-Control-Allow-Origin' "$cors" always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;


        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 1s;
        proxy_read_timeout 2s;

        error_page 502 = @fallback;
    }

    location @fallback {
        return 200 'Backend unavailable';
        add_header Content-Type text/plain;
    }

    # Enable gzip compression for better performance
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Handle 404 errors
    error_page 404 /index.html;
}